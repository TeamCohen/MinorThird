// copy of library time.mixup, frozen for testing

provide 'xtime';


defDict timeSep = : , . , \; ; //how do I capture the ';'?
defDict atTime = at, @;
defDict prefixTime = this, next, about, around, before, after, until, till, by, through, mid, from, starting, beginning;
defDict suffixTime = ish;
defDict midWord = or, -, and, to;
defDict fromWord = between, btw, bw, bt, from;
defDict qttyWord = $, dollar, USD, dollars, cent, cents, %, percent, percents, times, quarter, Q, million, millions;
defDict timeWord = noon, midnight, morning, afternoon, evening, tonight; 

defTokenProp prefixtime:1 =: ... [ai(prefixTime)] ... ;
defTokenProp suffixtime:1 =: ... [ai(suffixTime)] ... ;
defTokenProp midWord:1 	  =: ... [ai(midWord)] ... ;
defTokenProp fromWord:1   =: ... [ai(fromWord)] ... ;
defTokenProp qttyWord:1	  =: ... [ai(qttyWord)] ... ;
defTokenProp timeWord:1   =: ... [ai(timeWord)] ... ;


defTokenProp TUnit:1 =: ... [eqi('p') '.' eqi('m') '.'] ... || ... [eqi('pm')] ... || ... [eqi('p')] ... ;
defTokenProp TUnit:1 =: ... [eqi('a') '.' eqi('m') '.'] ... || ... [eqi('am')] ... || ... [eqi('a')] ... ;


defTokenProp T24:1  =: ... [re('^[0-1]?[0-9]$')] ... || ... [re('^2[0-4]$')] ... ; 
defTokenProp T60:1  =: ... [re('^[0-5][0-9]$')] ... ;


defTokenProp time:1 =: ... [ai(timeWord)] ... ;
defTokenProp time:1 =: ... [T24:1 ai(timeSep) T60:1] ... ; // 2:30
defTokenProp time:1 =: ... [T24:1 ai(timeSep) T60:1 ai(timeSep) T60:1] ... ; // 22:30:02
defTokenProp time:1 =: ... [T24:1 TUnit:1+R] ... ; // 2pm
//defTokenProp time:1 =: ... [T24:1 midWord:1] time:1+R ... ; // [2 -] 3pm 
defTokenProp time:1 =: ... [T24:1 suffixTime:1] ... ; // 10ish
defTokenProp time:1 =: ... time:1 [TUnit:1+R] ... ; 
defTokenProp time:1 =: ... ai(atTime) [T24:1] ... ; // @3
defTokenProp time:1 =: ... !eqi('the')  L time:1+R [midWord:1] time:1+R ... ; // 2pm or 4pm
defTokenProp time:1 =: ... [fromWord:1] time:1+R midword:1 time:1+R ... ; 


defSpanType extracted_time =: ... !ai(qttyWord) [L time:1+ R] !ai(qttyWord) ... || ... !ai(qttyWord) [L time:1+ R] || [L time:1+ R] !ai(qttyWord) ...  ;
defSpanType extracted_time =: ... <!ai(qttyWord), !time:1> [ai(prefixTime)+ R time:1+ R] !ai(qttyWord) ... || ... <!ai(qttyWord), !time:1> [ai(prefixTime)+ R time:1+ R] || [ai(prefixTime)+ R time:1+ R] !ai(qttyWord) ... ;;
defSpanType extracted_time =: ... <!ai(qttyWord), !time:1> [ai(prefixTime)+ 'the' time:1+ R] !ai(qttyWord) ... || ... <!ai(qttyWord), !time:1> [ai(prefixTime)+ 'the' time:1+ R] || [ai(prefixTime)+ 'the' time:1+ R] !ai(qttyWord) ... ;;

defTokenProp extracted_time:1 =: ... [@extracted_time] ... ;




